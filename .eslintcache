[{"C:\\SocialNetwork\\Network\\src\\App.tsx":"1","C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx":"2","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"3","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx":"4","C:\\SocialNetwork\\Network\\src\\index.tsx":"5","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx":"6","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx":"7","C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts":"8","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx":"9","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx":"10","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx":"12","C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx":"13","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx":"14","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx":"15","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx":"16","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx":"17","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx":"18","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx":"19","C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx":"20","C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx":"21","C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx":"22","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx":"23","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx":"24","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx":"25","C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts":"26","C:\\SocialNetwork\\Network\\src\\Components\\Login\\Login.tsx":"27","C:\\SocialNetwork\\Network\\src\\Components\\Hoc\\withAuthRedirect.tsx":"28"},{"size":1281,"mtime":1615109804417,"results":"29","hashOfConfig":"30"},{"size":916,"mtime":1614048244610,"results":"31","hashOfConfig":"30"},{"size":1233,"mtime":1611333263709,"results":"32","hashOfConfig":"30"},{"size":468,"mtime":1616238853228,"results":"33","hashOfConfig":"30"},{"size":321,"mtime":1611387862682,"results":"34","hashOfConfig":"30"},{"size":508,"mtime":1609014789405,"results":"35","hashOfConfig":"30"},{"size":1436,"mtime":1616252710386,"results":"36","hashOfConfig":"30"},{"size":425,"mtime":1606123191738,"results":"37","hashOfConfig":"30"},{"size":350,"mtime":1609583310028,"results":"38","hashOfConfig":"30"},{"size":194,"mtime":1609593623262,"results":"39","hashOfConfig":"30"},{"size":722,"mtime":1615111430647,"results":"40","hashOfConfig":"30"},{"size":3221,"mtime":1610426635375,"results":"41","hashOfConfig":"30"},{"size":766,"mtime":1614244151017,"results":"42","hashOfConfig":"30"},{"size":1451,"mtime":1614062318191,"results":"43","hashOfConfig":"30"},{"size":2236,"mtime":1615107827283,"results":"44","hashOfConfig":"30"},{"size":624,"mtime":1616242130984,"results":"45","hashOfConfig":"30"},{"size":1641,"mtime":1616252654521,"results":"46","hashOfConfig":"30"},{"size":1294,"mtime":1614209203241,"results":"47","hashOfConfig":"30"},{"size":5585,"mtime":1615104218411,"results":"48","hashOfConfig":"30"},{"size":4212,"mtime":1615104829313,"results":"49","hashOfConfig":"30"},{"size":2596,"mtime":1615104829323,"results":"50","hashOfConfig":"30"},{"size":411,"mtime":1613923145900,"results":"51","hashOfConfig":"30"},{"size":1903,"mtime":1616241266264,"results":"52","hashOfConfig":"30"},{"size":1640,"mtime":1615108482061,"results":"53","hashOfConfig":"30"},{"size":913,"mtime":1615108482086,"results":"54","hashOfConfig":"30"},{"size":955,"mtime":1615106826372,"results":"55","hashOfConfig":"30"},{"size":105,"mtime":1615109604652,"results":"56","hashOfConfig":"30"},{"size":746,"mtime":1616253237632,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1btcow1",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\SocialNetwork\\Network\\src\\App.tsx",["126","127"],"import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header'\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Route} from \"react-router-dom\"\r\nimport {DialogContainer} from \"./Components/Dialogs/DialogsContainer\";\r\nimport {UserContainer} from \"./Components/Users/userContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App-wrapper\">\r\n                < HeaderContainer />\r\n                < Navbar/>\r\n                <div className='App-wrapper-content'>\r\n                    < Route path='/profile/:userId?' render={() => <ProfileContainer />}/>\r\n                    < Route exact path='/dialogs' render={() => <DialogContainer />}/>\r\n                    < Route path= '/users' render={() => <UserContainer /> } />\r\n                    < Route path={'/login'} render={() => <Login />} />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n",["128","129"],"C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],["130","131"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx",[],"C:\\SocialNetwork\\Network\\src\\index.tsx",[],["132","133"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx",["134"],"C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx",[],["135","136"],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],["137","138"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx",["139"],"C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx",["140","141","142"],"import React, {ReactNode} from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DataACType} from \"../Redux/auth-Reducer\";\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n\r\n}\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n\r\n            <header className={s.Header}>\r\n                <img src=\"https://w-dog.ru/wallpapers/5/9/288879431917547/polyarnaya-sova-belaya-sova-ptica.jpg\"\r\n                     alt=\"image\"/>\r\n                     <div className={s.loginBlock}>\r\n                         {props.isAuth ? props.login: <NavLink to={'/login'} >Login</NavLink>}\r\n                         \r\n                     </div>\r\n            </header>\r\n\r\n    )\r\n}\r\nexport default Header","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx",[],["143","144"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx",["145"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx",["146"],"import React from \"react\";\r\nimport {addPostAC, changePostTextAC, DispatchAddPostType, DispatchChangePostType} from \"../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType, StateType} from \"../../Redux/State\";\r\n\r\ntype dispatchAddPostType = (addPostAC: DispatchAddPostType) => void\r\ntype dispatchUpdateNewPostType = (changePostTextAC:  DispatchChangePostType) => void\r\ntype dispatchAllType = dispatchAddPostType & dispatchUpdateNewPostType\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPost: string\r\n}\r\n\r\nconst mapStateToProps = (state: StateType):MapStateToPropsType => {\r\nreturn {\r\n    posts: state.profilePage.postData,\r\n    newPost: state.profilePage.newPost\r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch: dispatchAllType):MapDispatchToPropsType => {\r\n    return{\r\n        updateNewPostText:  (text: string) => {\r\n            dispatch(changePostTextAC(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const PostContainer = connect<MapStateToPropsType,MapDispatchToPropsType, {}, StateType >(mapStateToProps, mapDispatchToProps)(MyPosts)",["147","148"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx",["149"],"import { UserType} from \"../Redux/userReduser\";\r\nimport s from \"./userContainer.module.css\";\r\nimport userPhoto from \"../../Assepts/images/ava.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    toggleIsFolowingProgress: (isFetching: boolean, userId: number) => void\r\n    folowingInProgress: Array<number>\r\n}\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div>\r\n        {pages.map(p => {\r\n\r\n            return <span\r\n                onClick={() => {\r\n                    props.onPageChanged(p)\r\n                }}\r\n                className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\r\n\r\n        })}\r\n\r\n        {props.users.map(user => {\r\n            return (\r\n                <div key={user.id}>\r\n               <span>\r\n                   <div>\r\n                       <NavLink to={\"/profile/\" + user.id}>\r\n                       <img className={s.img} src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                            alt=\"image\"/>\r\n                       </NavLink>\r\n                   </div>\r\n                   <div>\r\n                       {user.followed\r\n                           ? <button disabled={props.folowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                               props.unfollow(user.id)\r\n                           }\r\n                           }>Follow</button>\r\n\r\n                           : <button disabled={props.folowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                               props.follow(user.id)\r\n\r\n                           }\r\n                           }>Unfollow</button>}\r\n\r\n                   </div>\r\n               </span>\r\n                    <span>\r\n                   <span>\r\n                       <div>{user.name}</div>\r\n                       <div>{user.status}</div>\r\n                   </span>\r\n                   <span>\r\n                       <div>{'user.location.country'}</div>\r\n                       <div>{'user.location.city'}</div>\r\n\r\n                   </span>\r\n               </span>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n}\r\nexport default Users","C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx",["150"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx",["151"],"import React from \"react\";\r\nimport {authApi} from \"../API/API\";\r\nlet initialState = {\r\n    userID: null ,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nexport type DataACType = {\r\n    userID:  string\r\n    email:  string\r\n    login:  string\r\n\r\n}\r\nexport type AuthStateType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\ntype ReturnAuthReducerType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\nconst authReducer = (state: AuthStateType = initialState, action: AllActionType): ReturnAuthReducerType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':{\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default :\r\n            return state as ReturnAuthReducerType\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (data: {userID:string , email: string,login: string}): setUserDataType => {\r\n    return { type: 'SET_USER_DATA', data: data }\r\n}\r\nexport type setUserDataType = {\r\n    type: 'SET_USER_DATA'\r\n   data:  DataACType\r\n\r\n}\r\ntype AllActionType = setUserDataType\r\nexport default authReducer\r\nexport const getUserData = () => {\r\n    return (dispatch: any) => {\r\n        authApi.me()\r\n            .then(response => {\r\n                let userID = response.data.data.id\r\n                let { email, login} = response.data.data\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(setAuthUserData({userID, email, login}))\r\n                }\r\n\r\n            })\r\n    }\r\n}","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Login\\Login.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Hoc\\withAuthRedirect.tsx",[],{"ruleId":"152","severity":1,"message":"153","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"156","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":15},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"157","replacedBy":"163"},{"ruleId":"159","replacedBy":"164"},{"ruleId":"152","severity":1,"message":"165","line":6,"column":9,"nodeType":"154","messageId":"155","endLine":6,"endColumn":17},{"ruleId":"157","replacedBy":"166"},{"ruleId":"159","replacedBy":"167"},{"ruleId":"157","replacedBy":"168"},{"ruleId":"159","replacedBy":"169"},{"ruleId":"152","severity":1,"message":"170","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"171","line":1,"column":16,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"172","line":4,"column":9,"nodeType":"154","messageId":"155","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":14,"column":17,"nodeType":"175","endLine":15,"endColumn":35},{"ruleId":"157","replacedBy":"176"},{"ruleId":"159","replacedBy":"177"},{"ruleId":"152","severity":1,"message":"170","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"170","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"157","replacedBy":"178"},{"ruleId":"159","replacedBy":"179"},{"ruleId":"173","severity":1,"message":"174","line":44,"column":24,"nodeType":"175","endLine":45,"endColumn":42},{"ruleId":"152","severity":1,"message":"165","line":7,"column":9,"nodeType":"154","messageId":"155","endLine":7,"endColumn":17},{"ruleId":"152","severity":1,"message":"170","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],["180"],["181"],"'Redirect' is defined but never used.",["180"],["181"],["180"],["181"],"'React' is defined but never used.","'ReactNode' is defined but never used.","'DataACType' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["180"],["181"],["180"],["181"],"no-global-assign","no-unsafe-negation"]