[{"C:\\SocialNetwork\\Network\\src\\App.tsx":"1","C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx":"2","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"3","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx":"4","C:\\SocialNetwork\\Network\\src\\index.tsx":"5","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx":"6","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx":"7","C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts":"8","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx":"9","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx":"10","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx":"12","C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx":"13","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx":"14","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx":"15","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx":"16","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx":"17","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx":"18","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx":"19","C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx":"20","C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx":"21","C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx":"22","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx":"23","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx":"24","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx":"25","C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts":"26","C:\\SocialNetwork\\Network\\src\\Components\\Login\\Login.tsx":"27","C:\\SocialNetwork\\Network\\src\\Components\\Hoc\\withAuthRedirect.tsx":"28","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"29"},{"size":1187,"mtime":1618483036542,"results":"30","hashOfConfig":"31"},{"size":916,"mtime":1614048244610,"results":"32","hashOfConfig":"31"},{"size":1347,"mtime":1618517062424,"results":"33","hashOfConfig":"31"},{"size":636,"mtime":1616356366433,"results":"34","hashOfConfig":"31"},{"size":321,"mtime":1611387862682,"results":"35","hashOfConfig":"31"},{"size":508,"mtime":1609014789405,"results":"36","hashOfConfig":"31"},{"size":1733,"mtime":1618508175379,"results":"37","hashOfConfig":"31"},{"size":425,"mtime":1606123191738,"results":"38","hashOfConfig":"31"},{"size":350,"mtime":1609583310028,"results":"39","hashOfConfig":"31"},{"size":194,"mtime":1609593623262,"results":"40","hashOfConfig":"31"},{"size":942,"mtime":1616348273022,"results":"41","hashOfConfig":"31"},{"size":3221,"mtime":1610426635375,"results":"42","hashOfConfig":"31"},{"size":766,"mtime":1614244151017,"results":"43","hashOfConfig":"31"},{"size":999,"mtime":1618507818919,"results":"44","hashOfConfig":"31"},{"size":2933,"mtime":1618516745279,"results":"45","hashOfConfig":"31"},{"size":624,"mtime":1618507236926,"results":"46","hashOfConfig":"31"},{"size":1218,"mtime":1618507278340,"results":"47","hashOfConfig":"31"},{"size":955,"mtime":1618516811559,"results":"48","hashOfConfig":"31"},{"size":5585,"mtime":1615104218411,"results":"49","hashOfConfig":"31"},{"size":4212,"mtime":1615104829313,"results":"50","hashOfConfig":"31"},{"size":2596,"mtime":1618481170306,"results":"51","hashOfConfig":"31"},{"size":411,"mtime":1613923145900,"results":"52","hashOfConfig":"31"},{"size":2295,"mtime":1616347435377,"results":"53","hashOfConfig":"31"},{"size":1640,"mtime":1615108482061,"results":"54","hashOfConfig":"31"},{"size":913,"mtime":1615108482086,"results":"55","hashOfConfig":"31"},{"size":1349,"mtime":1616356764025,"results":"56","hashOfConfig":"31"},{"size":1434,"mtime":1618490067591,"results":"57","hashOfConfig":"31"},{"size":747,"mtime":1616266654613,"results":"58","hashOfConfig":"31"},{"size":1302,"mtime":1616576633920,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1btcow1",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\SocialNetwork\\Network\\src\\App.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx",[],["127","128"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx",[],["129","130"],"C:\\SocialNetwork\\Network\\src\\index.tsx",[],["131","132"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx",[],["133","134"],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx",["135"],"C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx",["136","137","138"],"import React, {ReactNode} from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DataACType} from \"../Redux/auth-Reducer\";\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n\r\n}\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n\r\n            <header className={s.Header}>\r\n                <img src=\"https://w-dog.ru/wallpapers/5/9/288879431917547/polyarnaya-sova-belaya-sova-ptica.jpg\"\r\n                     alt=\"image\"/>\r\n                     <div className={s.loginBlock}>\r\n                         {props.isAuth ? props.login: <NavLink to={'/login'} >Login</NavLink>}\r\n                         \r\n                     </div>\r\n            </header>\r\n\r\n    )\r\n}\r\nexport default Header","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx",["139"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx",[],["140","141"],"C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx",["142"],"import { UserType} from \"../Redux/userReduser\";\r\nimport s from \"./userContainer.module.css\";\r\nimport userPhoto from \"../../Assepts/images/ava.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    toggleIsFolowingProgress: (isFetching: boolean, userId: number) => void\r\n    folowingInProgress: Array<number>\r\n}\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div>\r\n        {pages.map(p => {\r\n\r\n            return <span\r\n                onClick={() => {\r\n                    props.onPageChanged(p)\r\n                }}\r\n                className={props.currentPage === p ? s.selectedPage : ''}>{p}</span>\r\n\r\n        })}\r\n\r\n        {props.users.map(user => {\r\n            return (\r\n                <div key={user.id}>\r\n               <span>\r\n                   <div>\r\n                       <NavLink to={\"/profile/\" + user.id}>\r\n                       <img className={s.img} src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                            alt=\"image\"/>\r\n                       </NavLink>\r\n                   </div>\r\n                   <div>\r\n                       {user.followed\r\n                           ? <button disabled={props.folowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                               props.unfollow(user.id)\r\n                           }\r\n                           }>Follow</button>\r\n\r\n                           : <button disabled={props.folowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                               props.follow(user.id)\r\n\r\n                           }\r\n                           }>Unfollow</button>}\r\n\r\n                   </div>\r\n               </span>\r\n                    <span>\r\n                   <span>\r\n                       <div>{user.name}</div>\r\n                       <div>{user.status}</div>\r\n                   </span>\r\n                   <span>\r\n                       <div>{'user.location.country'}</div>\r\n                       <div>{'user.location.city'}</div>\r\n\r\n                   </span>\r\n               </span>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n}\r\nexport default Users","C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx",["143"],"\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../Redux/profileReducer\";\r\nimport {StateType} from \"../Redux/State\";\r\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype ContactsType = {\r\n    facebook: string\r\n    website: null\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: null\r\n    github: string\r\n    mainLink: null\r\n}\r\ntype PfotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PfotosType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\nexport type MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfileContainerProps = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\n\r\ntype OwnPropsType = MapDispatchToPropsType & MapStateToPropsType\r\nclass  ProfileContainer extends React.Component<ProfileContainerProps> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){\r\n            userId = '2'\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n\r\n            <Profile profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state:StateType): MapStateToPropsType  => {\r\n  return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n  }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType,MapDispatchToPropsType,{}, StateType >(mapStateToProps, {getUserProfile,getUserStatus,updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx",["144"],"import React from \"react\";\r\nimport {authApi} from \"../API/API\";\r\nlet initialState = {\r\n    userID: null ,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nexport type DataACType = {\r\n    userID:  string\r\n    email:  string\r\n    login:  string\r\n\r\n}\r\nexport type AuthStateType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\ntype ReturnAuthReducerType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\nconst authReducer = (state: AuthStateType = initialState, action: AllActionType): ReturnAuthReducerType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':{\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default :\r\n            return state as ReturnAuthReducerType\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (data: {userID:string , email: string,login: string}): setUserDataType => {\r\n    return { type: 'SET_USER_DATA', data: data }\r\n}\r\nexport type setUserDataType = {\r\n    type: 'SET_USER_DATA'\r\n   data:  DataACType\r\n\r\n}\r\ntype AllActionType = setUserDataType\r\nexport default authReducer\r\nexport const getUserData = () => {\r\n    return (dispatch: any) => {\r\n        authApi.me()\r\n            .then(response => {\r\n                let userID = response.data.data.id\r\n                let { email, login} = response.data.data\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(setAuthUserData({userID, email, login}))\r\n                }\r\n\r\n            })\r\n    }\r\n}","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Login\\Login.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Hoc\\withAuthRedirect.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"145","replacedBy":"149"},{"ruleId":"147","replacedBy":"150"},{"ruleId":"145","replacedBy":"151"},{"ruleId":"147","replacedBy":"152"},{"ruleId":"145","replacedBy":"153"},{"ruleId":"147","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"159","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"160","line":4,"column":9,"nodeType":"157","messageId":"158","endLine":4,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":14,"column":17,"nodeType":"163","endLine":15,"endColumn":35},{"ruleId":"155","severity":1,"message":"156","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"145","replacedBy":"164"},{"ruleId":"147","replacedBy":"165"},{"ruleId":"161","severity":1,"message":"162","line":44,"column":24,"nodeType":"163","endLine":45,"endColumn":42},{"ruleId":"155","severity":1,"message":"166","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":7,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],["167"],["168"],["167"],["168"],["167"],["168"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactNode' is defined but never used.","'DataACType' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["167"],["168"],"'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]