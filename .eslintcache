[{"C:\\SocialNetwork\\Network\\src\\App.tsx":"1","C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx":"2","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"3","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx":"4","C:\\SocialNetwork\\Network\\src\\index.tsx":"5","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx":"6","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx":"7","C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts":"8","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx":"9","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx":"10","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx":"12","C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx":"13","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx":"14","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx":"15","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx":"16","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx":"17","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx":"18","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx":"19","C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx":"20","C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx":"21","C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx":"22","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx":"23","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx":"24","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx":"25","C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts":"26","C:\\SocialNetwork\\Network\\src\\Components\\Login\\Login.tsx":"27","C:\\SocialNetwork\\Network\\src\\Components\\Hoc\\withAuthRedirect.tsx":"28","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"29"},{"size":1187,"mtime":1618483036542,"results":"30","hashOfConfig":"31"},{"size":916,"mtime":1614048244610,"results":"32","hashOfConfig":"31"},{"size":1233,"mtime":1611333263709,"results":"33","hashOfConfig":"31"},{"size":636,"mtime":1616356366433,"results":"34","hashOfConfig":"31"},{"size":321,"mtime":1611387862682,"results":"35","hashOfConfig":"31"},{"size":508,"mtime":1609014789405,"results":"36","hashOfConfig":"31"},{"size":1436,"mtime":1616252710386,"results":"37","hashOfConfig":"31"},{"size":425,"mtime":1606123191738,"results":"38","hashOfConfig":"31"},{"size":350,"mtime":1609583310028,"results":"39","hashOfConfig":"31"},{"size":194,"mtime":1609593623262,"results":"40","hashOfConfig":"31"},{"size":942,"mtime":1616348273022,"results":"41","hashOfConfig":"31"},{"size":3221,"mtime":1610426635375,"results":"42","hashOfConfig":"31"},{"size":766,"mtime":1614244151017,"results":"43","hashOfConfig":"31"},{"size":1451,"mtime":1614062318191,"results":"44","hashOfConfig":"31"},{"size":3211,"mtime":1616356335585,"results":"45","hashOfConfig":"31"},{"size":677,"mtime":1618483331604,"results":"46","hashOfConfig":"31"},{"size":1595,"mtime":1616264992987,"results":"47","hashOfConfig":"31"},{"size":1294,"mtime":1614209203241,"results":"48","hashOfConfig":"31"},{"size":5585,"mtime":1615104218411,"results":"49","hashOfConfig":"31"},{"size":4212,"mtime":1615104829313,"results":"50","hashOfConfig":"31"},{"size":2596,"mtime":1618481170306,"results":"51","hashOfConfig":"31"},{"size":411,"mtime":1613923145900,"results":"52","hashOfConfig":"31"},{"size":2295,"mtime":1616347435377,"results":"53","hashOfConfig":"31"},{"size":1640,"mtime":1615108482061,"results":"54","hashOfConfig":"31"},{"size":913,"mtime":1615108482086,"results":"55","hashOfConfig":"31"},{"size":1349,"mtime":1616356764025,"results":"56","hashOfConfig":"31"},{"size":1434,"mtime":1618490067591,"results":"57","hashOfConfig":"31"},{"size":747,"mtime":1616266654613,"results":"58","hashOfConfig":"31"},{"size":1302,"mtime":1616576633920,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1btcow1",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\SocialNetwork\\Network\\src\\App.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx",[],["131","132"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],["133","134"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx",[],"C:\\SocialNetwork\\Network\\src\\index.tsx",[],["135","136"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx",["137"],"import React, {ChangeEvent} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\"\r\nimport {DialogType, MessageType} from \"../Redux/State\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\ntype DialogPropsType = {\r\n    addMessage: () => void\r\n    changeMessageText: (text: string) => void\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\n\r\nconst Dialogs = (props: DialogPropsType) => {\r\n\r\n    let dialogElement = props.dialogs.map((d) => {\r\n        return < Dialog id={d.id} name={d.name}/>\r\n    })\r\n    let messageElement = props.messages.map((m) => {\r\n        return < Message key={m.id} message={m.message}/>\r\n    })\r\n    const addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n    const changeMessageText = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n\r\n        props.changeMessageText(event.currentTarget.value)\r\n    }\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogItem}>\r\n            {dialogElement}\r\n        </div>\r\n        <div className={s.messageItem}>\r\n            {messageElement}\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <textarea onChange={changeMessageText} value={props.newMessageText}></textarea>\r\n            </div>\r\n            <button onClick={addMessage}>Add Message</button>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Dialogs",["138","139"],"C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx",[],["140","141"],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx",["142"],"C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx",["143","144","145"],"import React, {ReactNode} from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DataACType} from \"../Redux/auth-Reducer\";\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n\r\n}\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n\r\n            <header className={s.Header}>\r\n                <img src=\"https://w-dog.ru/wallpapers/5/9/288879431917547/polyarnaya-sova-belaya-sova-ptica.jpg\"\r\n                     alt=\"image\"/>\r\n                     <div className={s.loginBlock}>\r\n                         {props.isAuth ? props.login: <NavLink to={'/login'} >Login</NavLink>}\r\n                         \r\n                     </div>\r\n            </header>\r\n\r\n    )\r\n}\r\nexport default Header","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx",["146"],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],["147","148"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx",["149"],"import React from \"react\";\r\nimport {addPostAC, changePostTextAC, DispatchAddPostType, DispatchChangePostType} from \"../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType, StateType} from \"../../Redux/State\";\r\n\r\ntype dispatchAddPostType = (addPostAC: DispatchAddPostType) => void\r\ntype dispatchUpdateNewPostType = (changePostTextAC:  DispatchChangePostType) => void\r\ntype dispatchAllType = dispatchAddPostType & dispatchUpdateNewPostType\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPost: string\r\n}\r\n\r\nconst mapStateToProps = (state: StateType):MapStateToPropsType => {\r\nreturn {\r\n    posts: state.profilePage.postData,\r\n    newPost: state.profilePage.newPost\r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch: dispatchAllType):MapDispatchToPropsType => {\r\n    return{\r\n        updateNewPostText:  (text: string) => {\r\n            dispatch(changePostTextAC(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const PostContainer = connect<MapStateToPropsType,MapDispatchToPropsType, {}, StateType >(mapStateToProps, mapDispatchToProps)(MyPosts)","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx",["150"],"C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx",[],["151","152"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx",["153"],"\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../Redux/profileReducer\";\r\nimport {StateType} from \"../Redux/State\";\r\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype ContactsType = {\r\n    facebook: string\r\n    website: null\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: null\r\n    github: string\r\n    mainLink: null\r\n}\r\ntype PfotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PfotosType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\nexport type MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfileContainerProps = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\n\r\ntype OwnPropsType = MapDispatchToPropsType & MapStateToPropsType\r\nclass  ProfileContainer extends React.Component<ProfileContainerProps> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){\r\n            userId = '2'\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n\r\n            <Profile profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state:StateType): MapStateToPropsType  => {\r\n  return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n  }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType,MapDispatchToPropsType,{}, StateType >(mapStateToProps, {getUserProfile,getUserStatus,updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx",["154"],"import React from \"react\";\r\nimport {authApi} from \"../API/API\";\r\nlet initialState = {\r\n    userID: null ,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nexport type DataACType = {\r\n    userID:  string\r\n    email:  string\r\n    login:  string\r\n\r\n}\r\nexport type AuthStateType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\ntype ReturnAuthReducerType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\nconst authReducer = (state: AuthStateType = initialState, action: AllActionType): ReturnAuthReducerType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':{\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default :\r\n            return state as ReturnAuthReducerType\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (data: {userID:string , email: string,login: string}): setUserDataType => {\r\n    return { type: 'SET_USER_DATA', data: data }\r\n}\r\nexport type setUserDataType = {\r\n    type: 'SET_USER_DATA'\r\n   data:  DataACType\r\n\r\n}\r\ntype AllActionType = setUserDataType\r\nexport default authReducer\r\nexport const getUserData = () => {\r\n    return (dispatch: any) => {\r\n        authApi.me()\r\n            .then(response => {\r\n                let userID = response.data.data.id\r\n                let { email, login} = response.data.data\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(setAuthUserData({userID, email, login}))\r\n                }\r\n\r\n            })\r\n    }\r\n}","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx",[],["155","156"],"C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Login\\Login.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Hoc\\withAuthRedirect.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"157","replacedBy":"163"},{"ruleId":"159","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":6,"column":9,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"157","replacedBy":"169"},{"ruleId":"159","replacedBy":"170"},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","replacedBy":"172"},{"ruleId":"165","severity":1,"message":"173","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"174","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"175","line":4,"column":9,"nodeType":"167","messageId":"168","endLine":4,"endColumn":19},{"ruleId":"176","severity":1,"message":"177","line":14,"column":17,"nodeType":"178","endLine":15,"endColumn":35},{"ruleId":"165","severity":1,"message":"179","line":7,"column":21,"nodeType":"167","messageId":"168","endLine":7,"endColumn":32},{"ruleId":"157","replacedBy":"180"},{"ruleId":"159","replacedBy":"181"},{"ruleId":"165","severity":1,"message":"173","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":44,"column":24,"nodeType":"178","endLine":45,"endColumn":42},{"ruleId":"157","replacedBy":"182"},{"ruleId":"159","replacedBy":"183"},{"ruleId":"165","severity":1,"message":"166","line":7,"column":9,"nodeType":"167","messageId":"168","endLine":7,"endColumn":17},{"ruleId":"165","severity":1,"message":"173","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"157","replacedBy":"184"},{"ruleId":"159","replacedBy":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],["186"],["187"],["186"],["187"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["186"],["187"],["186"],["187"],"'React' is defined but never used.","'ReactNode' is defined but never used.","'DataACType' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'formReducer' is defined but never used.",["186"],["187"],["186"],["187"],["186"],["187"],"no-global-assign","no-unsafe-negation"]