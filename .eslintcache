[{"C:\\SocialNetwork\\Network\\src\\App.tsx":"1","C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx":"2","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"3","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx":"4","C:\\SocialNetwork\\Network\\src\\index.tsx":"5","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx":"6","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx":"7","C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts":"8","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx":"9","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx":"10","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx":"12","C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx":"13","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx":"14","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx":"15","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx":"16","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx":"17","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx":"18","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx":"19","C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx":"20"},{"size":992,"mtime":1611766614095,"results":"21","hashOfConfig":"22"},{"size":805,"mtime":1609023244384,"results":"23","hashOfConfig":"22"},{"size":1233,"mtime":1611333263709,"results":"24","hashOfConfig":"22"},{"size":351,"mtime":1611387115275,"results":"25","hashOfConfig":"22"},{"size":321,"mtime":1611387862682,"results":"26","hashOfConfig":"22"},{"size":508,"mtime":1609014789405,"results":"27","hashOfConfig":"22"},{"size":1398,"mtime":1610603226397,"results":"28","hashOfConfig":"22"},{"size":425,"mtime":1606123191738,"results":"29","hashOfConfig":"22"},{"size":350,"mtime":1609583310028,"results":"30","hashOfConfig":"22"},{"size":194,"mtime":1609593623262,"results":"31","hashOfConfig":"22"},{"size":510,"mtime":1609587100147,"results":"32","hashOfConfig":"22"},{"size":3221,"mtime":1610426635375,"results":"33","hashOfConfig":"22"},{"size":354,"mtime":1608938888392,"results":"34","hashOfConfig":"22"},{"size":1417,"mtime":1611663361364,"results":"35","hashOfConfig":"22"},{"size":1162,"mtime":1611663361365,"results":"36","hashOfConfig":"22"},{"size":295,"mtime":1610436997295,"results":"37","hashOfConfig":"22"},{"size":1456,"mtime":1611327996868,"results":"38","hashOfConfig":"22"},{"size":1296,"mtime":1611765045488,"results":"39","hashOfConfig":"22"},{"size":2845,"mtime":1613869800266,"results":"40","hashOfConfig":"22"},{"size":3863,"mtime":1613874961634,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1btcow1",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\SocialNetwork\\Network\\src\\App.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx",[],["91","92"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx",[],"C:\\SocialNetwork\\Network\\src\\index.tsx",[],["93","94"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],["95","96"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],["97","98"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx",["99"],"C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx",["100"],"import React from \"react\";\r\nimport s from './Header.module.css'\r\nconst Header = () => {\r\n    return (\r\n\r\n            <header className={s.Header}>\r\n                <img src=\"https://w-dog.ru/wallpapers/5/9/288879431917547/polyarnaya-sova-belaya-sova-ptica.jpg\"\r\n                     alt=\"image\"/>\r\n            </header>\r\n\r\n    )\r\n}\r\nexport default Header","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx",["101"],"import React from \"react\";\r\nimport {addMessageAC, changeMessageTextAC} from \"../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {DialogType, DispatchAddMessageType, DispatchChangeMessageType, MessageType, StateType} from \"../Redux/State\";\r\nimport {connect} from \"react-redux\";\r\ntype AddMessagesType = (addMessageAC: DispatchAddMessageType) => void\r\ntype ChangeMessagesType = (changeMessageTextAC: DispatchChangeMessageType) => void\r\ntype allDispatchDialogType = AddMessagesType & ChangeMessagesType\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    changeMessageText: (text: string) => void\r\n}\r\ntype MapStateToPropsType = {\r\n    dialogs:  Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n\r\n}\r\nconst mapStateToProps = (state:StateType ): MapStateToPropsType => {\r\n    return{\r\n        dialogs: state.dialogPage.dialogData,\r\n        messages: state.dialogPage.messageData,\r\n        newMessageText: state.dialogPage.newMessageText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: allDispatchDialogType ): MapDispatchToPropsType => {\r\n    return{\r\n        addMessage: () => {\r\n            dispatch(addMessageAC())\r\n        },\r\n        changeMessageText: (text: string) => {\r\n            dispatch(changeMessageTextAC(text))\r\n        }\r\n    }\r\n}\r\nexport const DialogContainer = connect<MapStateToPropsType,MapDispatchToPropsType, {}, StateType>(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n",["102","103"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx",["104"],"import React from \"react\";\r\nimport {addPostAC, changePostTextAC} from \"../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {DispatchAddPostType, DispatchChangePostType, PostType, StateType} from \"../../Redux/State\";\r\n\r\ntype dispatchAddPostType = (addPostAC: DispatchAddPostType) => void\r\ntype dispatchUpdateNewPostType = (changePostTextAC:  DispatchChangePostType) => void\r\ntype dispatchAllType = dispatchAddPostType & dispatchUpdateNewPostType\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPost: string\r\n}\r\n\r\nconst mapStateToProps = (state: StateType):MapStateToPropsType => {\r\nreturn {\r\n    posts: state.profilePage.postData,\r\n    newPost: state.profilePage.newPost\r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch: dispatchAllType):MapDispatchToPropsType => {\r\n    return{\r\n        updateNewPostText:  (text: string) => {\r\n\r\n            dispatch(changePostTextAC(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const PostContainer = connect<MapStateToPropsType,MapDispatchToPropsType, {}, StateType >(mapStateToProps, mapDispatchToProps)(MyPosts)","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx",["105","106"],"\r\nexport type UsersType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    followed: boolean,\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n    photos: string\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nlet initialState: UsersType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1\r\n}\r\nexport const userReducer = (state = initialState, action:UserReducerActionType) => {\r\n    switch (action.type) {\r\n\r\n        case 'FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userID){\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                } )\r\n            }\r\n        break;\r\n        }\r\n        case 'UNFOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userID){\r\n                        return{...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n\r\n        break;\r\n        }\r\n        case 'USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SET_CURRENT_PAGE':{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SET_TOTAL_USER_COUNT\":{\r\n            return {...state, totalUsersCount: action.pageNumber}\r\n        }\r\n        default :{\r\n                return state\r\n            }\r\n    }\r\n}\r\nexport const setCurrentPageAC = (currentPage: number):SetCurrentPageACType => {\r\n    return {type: 'SET_CURRENT_PAGE', currentPage: currentPage}\r\n}\r\nexport const followAC = (userID: number):FollowACType => {\r\n    return{type: 'FOLLOW', userID}\r\n}\r\nexport const unfollowAC = (userID: number):UnFollowACType => {\r\n    return{type: 'UNFOLLOW', userID}\r\n}\r\nexport const setUsersAC = (users: Array<UserType>) => {\r\n    return{type:'USERS', users}\r\n}\r\nexport const setTotalUserCountAC = (pageNumber: number): setTotalUserCountACType => {\r\n    return{type: 'SET_TOTAL_USER_COUNT', pageNumber: pageNumber}\r\n}\r\nexport type SetUSerACType = {\r\n    type: 'USERS'\r\n    users: Array<UserType>\r\n}\r\nexport type FollowACType = {\r\n    type: 'FOLLOW'\r\n    userID: number\r\n}\r\nexport type UnFollowACType = {\r\n    type: 'UNFOLLOW'\r\n    userID: number\r\n}\r\nexport type SetCurrentPageACType =  {\r\n    type:'SET_CURRENT_PAGE'\r\n    currentPage: number\r\n}\r\nexport type setTotalUserCountACType = {\r\n    type: 'SET_TOTAL_USER_COUNT'\r\n    pageNumber: number\r\n}\r\ntype UserReducerActionType = FollowACType  |  UnFollowACType | SetUSerACType | SetCurrentPageACType | setTotalUserCountACType;","C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":7,"column":17,"nodeType":"123","endLine":8,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"107","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":39,"column":9,"nodeType":"128","messageId":"129","endLine":39,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":52,"column":9,"nodeType":"128","messageId":"129","endLine":52,"endColumn":15},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],["130"],["131"],["130"],["131"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["130"],["131"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]