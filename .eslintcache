[{"C:\\SocialNetwork\\Network\\src\\App.tsx":"1","C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx":"2","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"3","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx":"4","C:\\SocialNetwork\\Network\\src\\index.tsx":"5","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx":"6","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx":"7","C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts":"8","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx":"9","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx":"10","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx":"12","C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx":"13","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx":"14","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx":"15","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx":"16","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx":"17","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx":"18","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx":"19","C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx":"20","C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx":"21","C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx":"22","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx":"23","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx":"24","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx":"25","C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts":"26"},{"size":1161,"mtime":1614235441509,"results":"27","hashOfConfig":"28"},{"size":916,"mtime":1614048244610,"results":"29","hashOfConfig":"28"},{"size":1233,"mtime":1611333263709,"results":"30","hashOfConfig":"28"},{"size":460,"mtime":1614069431843,"results":"31","hashOfConfig":"28"},{"size":321,"mtime":1611387862682,"results":"32","hashOfConfig":"28"},{"size":508,"mtime":1609014789405,"results":"33","hashOfConfig":"28"},{"size":1398,"mtime":1610603226397,"results":"34","hashOfConfig":"28"},{"size":425,"mtime":1606123191738,"results":"35","hashOfConfig":"28"},{"size":350,"mtime":1609583310028,"results":"36","hashOfConfig":"28"},{"size":194,"mtime":1609593623262,"results":"37","hashOfConfig":"28"},{"size":713,"mtime":1614209324568,"results":"38","hashOfConfig":"28"},{"size":3221,"mtime":1610426635375,"results":"39","hashOfConfig":"28"},{"size":766,"mtime":1614244151017,"results":"40","hashOfConfig":"28"},{"size":1451,"mtime":1614062318191,"results":"41","hashOfConfig":"28"},{"size":1965,"mtime":1614237829927,"results":"42","hashOfConfig":"28"},{"size":485,"mtime":1614233140134,"results":"43","hashOfConfig":"28"},{"size":1456,"mtime":1611327996868,"results":"44","hashOfConfig":"28"},{"size":1294,"mtime":1614209203241,"results":"45","hashOfConfig":"28"},{"size":3271,"mtime":1613927715918,"results":"46","hashOfConfig":"28"},{"size":3582,"mtime":1614503513288,"results":"47","hashOfConfig":"28"},{"size":2858,"mtime":1614413435788,"results":"48","hashOfConfig":"28"},{"size":411,"mtime":1613923145900,"results":"49","hashOfConfig":"28"},{"size":1974,"mtime":1614225663027,"results":"50","hashOfConfig":"28"},{"size":1197,"mtime":1614242599509,"results":"51","hashOfConfig":"28"},{"size":1333,"mtime":1614243230776,"results":"52","hashOfConfig":"28"},{"size":972,"mtime":1614415411438,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1btcow1",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\SocialNetwork\\Network\\src\\App.tsx",["120","121"],"C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx",[],["122","123"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],["124","125"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx",[],"C:\\SocialNetwork\\Network\\src\\index.tsx",[],["126","127"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx",[],["128","129"],"C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx",[],["130","131"],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],["132","133"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["134"],"import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {MapStateToProps} from \"react-redux\";\r\nimport {MapStateToPropsType} from \"../ProfileContainer\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props: MapStateToPropsType) => {\r\n   if (!props.profile){\r\n       return <Preloader />\r\n   }\r\n   \r\n    return <div >\r\n        <div className={s.Content}><img src=\"https://img3.goodfon.ru/original/1920x1200/4/dd/abstract-colors-unreal-clouds-1927.jpg\"\r\n                  alt=\"fon\"/></div>\r\n        <div className={s.Ava}><img\r\n            src= {props.profile.photos.small}\r\n            alt=\"Ava\" />\r\n        </div>\r\n    </div>\r\n}\r\nexport default ProfileInfo",["135","136"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx",["137"],"C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx",["138","139","140"],"import React, {ReactNode} from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DataACType} from \"../Redux/auth-Reducer\";\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n\r\n}\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n\r\n            <header className={s.Header}>\r\n                <img src=\"https://w-dog.ru/wallpapers/5/9/288879431917547/polyarnaya-sova-belaya-sova-ptica.jpg\"\r\n                     alt=\"image\"/>\r\n                     <div className={s.loginBlock}>\r\n                         {props.isAuth ? props.login: <NavLink to={'/login'} >Login</NavLink>}\r\n                         \r\n                     </div>\r\n            </header>\r\n\r\n    )\r\n}\r\nexport default Header","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\dialogReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\profileReducer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\redux-store.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\DialogsContainer.tsx",["141"],"import React from \"react\";\r\nimport {addMessageAC, changeMessageTextAC} from \"../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {DialogType, DispatchAddMessageType, DispatchChangeMessageType, MessageType, StateType} from \"../Redux/State\";\r\nimport {connect} from \"react-redux\";\r\ntype AddMessagesType = (addMessageAC: DispatchAddMessageType) => void\r\ntype ChangeMessagesType = (changeMessageTextAC: DispatchChangeMessageType) => void\r\ntype allDispatchDialogType = AddMessagesType & ChangeMessagesType\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    changeMessageText: (text: string) => void\r\n}\r\ntype MapStateToPropsType = {\r\n    dialogs:  Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n\r\n}\r\nconst mapStateToProps = (state:StateType ): MapStateToPropsType => {\r\n    return{\r\n        dialogs: state.dialogPage.dialogData,\r\n        messages: state.dialogPage.messageData,\r\n        newMessageText: state.dialogPage.newMessageText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: allDispatchDialogType ): MapDispatchToPropsType => {\r\n    return{\r\n        addMessage: () => {\r\n            dispatch(addMessageAC())\r\n        },\r\n        changeMessageText: (text: string) => {\r\n            dispatch(changeMessageTextAC(text))\r\n        }\r\n    }\r\n}\r\nexport const DialogContainer = connect<MapStateToPropsType,MapDispatchToPropsType, {}, StateType>(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPostContainer.tsx",["142"],"import React from \"react\";\r\nimport {addPostAC, changePostTextAC, DispatchAddPostType, DispatchChangePostType} from \"../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType, StateType} from \"../../Redux/State\";\r\n\r\ntype dispatchAddPostType = (addPostAC: DispatchAddPostType) => void\r\ntype dispatchUpdateNewPostType = (changePostTextAC:  DispatchChangePostType) => void\r\ntype dispatchAllType = dispatchAddPostType & dispatchUpdateNewPostType\r\ntype MapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPost: string\r\n}\r\n\r\nconst mapStateToProps = (state: StateType):MapStateToPropsType => {\r\nreturn {\r\n    posts: state.profilePage.postData,\r\n    newPost: state.profilePage.newPost\r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch: dispatchAllType):MapDispatchToPropsType => {\r\n    return{\r\n        updateNewPostText:  (text: string) => {\r\n            dispatch(changePostTextAC(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const PostContainer = connect<MapStateToPropsType,MapDispatchToPropsType, {}, StateType >(mapStateToProps, mapDispatchToProps)(MyPosts)",["143","144"],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\userReduser.tsx",["145","146"],"\r\nexport type UsersType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    followed: boolean,\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n    photos: string\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nlet initialState: UsersType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n}\r\nexport const userReducer = (state = initialState, action:UserReducerActionType) => {\r\n    switch (action.type) {\r\n\r\n        case 'FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userID){\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                } )\r\n            }\r\n        break;\r\n        }\r\n        case 'UNFOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userID){\r\n                        return{...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n\r\n        break;\r\n        }\r\n        case 'USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SET_CURRENT_PAGE':{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SET_TOTAL_USER_COUNT\":{\r\n            return {...state, totalUsersCount: action.pageNumber}\r\n        }\r\n        case \"TOGGLE_IS_FETCHING\":{\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        default :{\r\n                return state\r\n            }\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage: number):SetCurrentPageACType => {\r\n    return {type: 'SET_CURRENT_PAGE', currentPage: currentPage}\r\n}\r\nexport const follow = (userID: number):FollowACType => {\r\n    return{type: 'FOLLOW', userID}\r\n}\r\nexport const unfollow = (userID: number):UnFollowACType => {\r\n    return{type: 'UNFOLLOW', userID}\r\n}\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return{type:'USERS', users}\r\n}\r\nexport const setTotalUserCount = (pageNumber: number): setTotalUserCountACType => {\r\n    return{type: 'SET_TOTAL_USER_COUNT', pageNumber: pageNumber}\r\n}\r\nexport const setIsFetching = (isFetching: boolean):setToggleIsFetchingType => {\r\n    return{type: 'TOGGLE_IS_FETCHING', isFetching: isFetching }\r\n}\r\nexport type setToggleIsFetchingType = {\r\n    type: 'TOGGLE_IS_FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type SetUSerACType = {\r\n    type: 'USERS'\r\n    users: Array<UserType>\r\n}\r\nexport type FollowACType = {\r\n    type: 'FOLLOW'\r\n    userID: number\r\n}\r\nexport type UnFollowACType = {\r\n    type: 'UNFOLLOW'\r\n    userID: number\r\n}\r\nexport type SetCurrentPageACType =  {\r\n    type:'SET_CURRENT_PAGE'\r\n    currentPage: number\r\n}\r\nexport type setTotalUserCountACType = {\r\n    type: 'SET_TOTAL_USER_COUNT'\r\n    pageNumber: number\r\n}\r\ntype UserReducerActionType = FollowACType  |  UnFollowACType | SetUSerACType | SetCurrentPageACType | setTotalUserCountACType | setToggleIsFetchingType;","C:\\SocialNetwork\\Network\\src\\Components\\Users\\userContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Users\\Users.tsx",["147","148"],"C:\\SocialNetwork\\Network\\src\\Components\\Common\\Preloader\\Preloader.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\auth-Reducer.tsx",["149"],"import React from \"react\";\r\nlet initialState = {\r\n    userID: null ,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nexport type DataACType = {\r\n    userID:  string\r\n    email:  string\r\n    login:  string\r\n\r\n}\r\nexport type AuthStateType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\ntype ReturnAuthReducerType = {\r\n    userID: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\nconst authReducer = (state: AuthStateType = initialState, action: AllActionType): ReturnAuthReducerType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':{\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default :\r\n            return state as ReturnAuthReducerType\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (data: {userID:string , email: string,login: string}): setUserDataType => {\r\n    return { type: 'SET_USER_DATA', data: data }\r\n}\r\nexport type setUserDataType = {\r\n    type: 'SET_USER_DATA'\r\n   data:  DataACType\r\n\r\n}\r\ntype AllActionType = setUserDataType\r\nexport default authReducer","C:\\SocialNetwork\\Network\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\API\\API.ts",["150"],{"ruleId":"151","severity":1,"message":"152","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":15},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"156","replacedBy":"160"},{"ruleId":"158","replacedBy":"161"},{"ruleId":"156","replacedBy":"162"},{"ruleId":"158","replacedBy":"163"},{"ruleId":"156","replacedBy":"164"},{"ruleId":"158","replacedBy":"165"},{"ruleId":"156","replacedBy":"166"},{"ruleId":"158","replacedBy":"167"},{"ruleId":"156","replacedBy":"168"},{"ruleId":"158","replacedBy":"169"},{"ruleId":"151","severity":1,"message":"170","line":3,"column":9,"nodeType":"153","messageId":"154","endLine":3,"endColumn":24},{"ruleId":"156","replacedBy":"171"},{"ruleId":"158","replacedBy":"172"},{"ruleId":"151","severity":1,"message":"173","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"174","line":1,"column":16,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"175","line":4,"column":9,"nodeType":"153","messageId":"154","endLine":4,"endColumn":19},{"ruleId":"176","severity":1,"message":"177","line":14,"column":17,"nodeType":"178","endLine":15,"endColumn":35},{"ruleId":"151","severity":1,"message":"173","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"173","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"156","replacedBy":"179"},{"ruleId":"158","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":41,"column":9,"nodeType":"183","messageId":"184","endLine":41,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":54,"column":9,"nodeType":"183","messageId":"184","endLine":54,"endColumn":15},{"ruleId":"151","severity":1,"message":"185","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":45,"column":24,"nodeType":"178","endLine":46,"endColumn":42},{"ruleId":"151","severity":1,"message":"173","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"186","line":14,"column":62},"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","no-native-reassign",["187"],"no-negated-in-lhs",["188"],["187"],["188"],["187"],["188"],["187"],["188"],["187"],["188"],["187"],["188"],"'MapStateToProps' is defined but never used.",["187"],["188"],"'React' is defined but never used.","'ReactNode' is defined but never used.","'DataACType' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["187"],["188"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'axios' is defined but never used.","Parsing error: '=>' expected.","no-global-assign","no-unsafe-negation"]