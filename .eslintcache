[{"C:\\SocialNetwork\\Network\\src\\App.tsx":"1","C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx":"2","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"3","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx":"4","C:\\SocialNetwork\\Network\\src\\index.tsx":"5","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx":"6","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx":"7","C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts":"8","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx":"9","C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx":"10","C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx":"12","C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx":"13"},{"size":1211,"mtime":1610073448867,"results":"14","hashOfConfig":"15"},{"size":805,"mtime":1609023244384,"results":"16","hashOfConfig":"15"},{"size":1078,"mtime":1610081793336,"results":"17","hashOfConfig":"15"},{"size":476,"mtime":1609773822206,"results":"18","hashOfConfig":"15"},{"size":460,"mtime":1610082231871,"results":"19","hashOfConfig":"15"},{"size":508,"mtime":1609014789405,"results":"20","hashOfConfig":"15"},{"size":832,"mtime":1609773669290,"results":"21","hashOfConfig":"15"},{"size":425,"mtime":1606123191738,"results":"22","hashOfConfig":"15"},{"size":350,"mtime":1609583310028,"results":"23","hashOfConfig":"15"},{"size":194,"mtime":1609593623262,"results":"24","hashOfConfig":"15"},{"size":510,"mtime":1609587100147,"results":"25","hashOfConfig":"15"},{"size":2306,"mtime":1610080806978,"results":"26","hashOfConfig":"15"},{"size":354,"mtime":1608938888392,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1btcow1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\SocialNetwork\\Network\\src\\App.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Navbar\\Navbar.tsx",[],["56","57"],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\Profile.tsx",[],"C:\\SocialNetwork\\Network\\src\\index.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\MyPosts\\Post\\Posts.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\SocialNetwork\\Network\\src\\reportWebVitals.ts",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Dialog\\Dialog.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\SocialNetwork\\Network\\src\\Components\\Redux\\State.tsx",["58"],"import React from \"react\";\r\n\r\n\r\nexport type PostType = {\r\n    message: string\r\n    likeCount: number\r\n    id: number\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogPageType = {\r\n    dialogData: Array<DialogType>\r\n    messageData: Array<MessageType>\r\n}\r\nexport type ProfilePageType = {\r\n    postData: Array<PostType>\r\n    newPost: string\r\n}\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    dialogPage: DialogPageType\r\n}\r\nexport type StoreType = {\r\n    _state: StateType\r\n    addNewPost: () => void\r\n    changePostText:(text: string) => void\r\n    subscribe: (observer: (state: StateType) => void) => void\r\n    getState: () => StateType\r\n    _rerenderEntireTree: (state: StateType) => void\r\n}\r\nexport const store:StoreType  = {\r\n    _state:  {\r\n        profilePage: {\r\n            postData: [\r\n                {message: 'How are you', likeCount: 2, id: 1},\r\n                {message: 'hi', likeCount: 0, id: 2},\r\n                {message: 'good morning', likeCount: 22, id: 3},\r\n            ],\r\n            newPost: 'It-Kamasutra'\r\n        },\r\n        dialogPage: {\r\n            dialogData: [\r\n                {id: 1, name: 'Sasha'},\r\n                {id: 2, name: 'Meda'},\r\n                {id: 3, name: 'Victor'},\r\n                {id: 4, name: 'Alena'},\r\n                {id: 5, name: 'Dasha'},\r\n            ],\r\n            messageData: [\r\n                {id: 1, message: 'i understand'},\r\n                {id: 2, message: 'i understand you'},\r\n                {id: 3, message: 'i see you'},\r\n            ]\r\n        },\r\n    },\r\n    getState () {\r\n        return this._state\r\n    },\r\n    _rerenderEntireTree  (state: StateType)  {\r\n    },\r\n    addNewPost () {\r\n\r\n        let newPost = {message: this._state.profilePage.newPost, likeCount: 0, id: Math.random() + 1}\r\n        this._state.profilePage.postData.push(newPost)\r\n        this._state.profilePage.newPost = ''\r\n        this._rerenderEntireTree(this._state)\r\n    },\r\n    changePostText(text: string) {\r\n        this._state.profilePage.newPost = text\r\n        this._rerenderEntireTree(this._state)\r\n    },\r\n    subscribe (observer: (state: StateType) => void)  {\r\n        this._rerenderEntireTree =  observer\r\n    },\r\n}\r\n\r\n\r\n","C:\\SocialNetwork\\Network\\src\\Components\\Header\\Header.tsx",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":7,"column":17,"nodeType":"70","endLine":8,"endColumn":35},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]